// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Chicken struct {
	ID        int32              `json:"id"`
	Breed     *string            `json:"breed"`
	HatchDate pgtype.Date        `json:"hatch_date"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type FeedSchedule struct {
	ID               int32              `json:"id"`
	FeedTypeID       *int32             `json:"feed_type_id"`
	TimesPerDay      *int32             `json:"times_per_day"`
	AmountPerFeeding pgtype.Numeric     `json:"amount_per_feeding"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
}

type FeedType struct {
	ID          int32              `json:"id"`
	Name        string             `json:"name"`
	CostPerUnit pgtype.Numeric     `json:"cost_per_unit"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type FeedingLog struct {
	ID         int32              `json:"id"`
	FeedTypeID *int32             `json:"feed_type_id"`
	ChickenIds []int32            `json:"chicken_ids"`
	AmountFed  pgtype.Numeric     `json:"amount_fed"`
	DateTime   pgtype.Timestamptz `json:"date_time"`
	Comments   *string            `json:"comments"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type Inventory struct {
	ID           int32              `json:"id"`
	LocationID   *int32             `json:"location_id"`
	ChickenCount *int32             `json:"chicken_count"`
	LoadDate     pgtype.Date        `json:"load_date"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}

type Location struct {
	ID          int32              `json:"id"`
	Name        string             `json:"name"`
	Description *string            `json:"description"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type Log struct {
	ID        int32              `json:"id"`
	UserID    *int32             `json:"user_id"`
	Action    *string            `json:"action"`
	Details   []byte             `json:"details"`
	Timestamp pgtype.Timestamptz `json:"timestamp"`
}

type Role struct {
	ID          int32    `json:"id"`
	Name        string   `json:"name"`
	Permissions []string `json:"permissions"`
}

type SuperAdmin struct {
	ID           int32              `json:"id"`
	Username     string             `json:"username"`
	PasswordHash string             `json:"password_hash"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}

type Tenant struct {
	ID         int32              `json:"id"`
	Name       string             `json:"name"`
	LicenseKey string             `json:"license_key"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type User struct {
	ID           int32              `json:"id"`
	Username     string             `json:"username"`
	PasswordHash string             `json:"password_hash"`
	Role         string             `json:"role"`
	TenantID     *int32             `json:"tenant_id"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}
